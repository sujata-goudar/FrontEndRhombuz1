on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: Deploy 3ac38d3f-2429-432d-88da-d4bad255122f.sh

env:
  AWS_REGION: us-west-1 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: frontend
  SNS_TOPIC_ARN: arn:aws:sns:us-west-1:337663073595:frontend-cicd-notification

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      # Step 1: Install npm Dependencies
      - name: Install npm Dependencies
        run: npm install

      # Step 2: Lint code
      - name: Lint code
        run: npm run lint

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          
      - name: Deploy docker container webhook
        uses: joelwmale/webhook-action@master
        env:
          WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL  }}
          data: "{ 'myField': 'myFieldValue'}"
      - name: Send SNS Notification (Success)
        if: ${{ steps.deploy-webhook.outputs.status == 'success' }}
        run: aws sns publish --topic-arn $SNS_TOPIC_ARN --message "Deployment to ECR and webhook execution were successful."

      - name: Send SNS Notification (Failure)
        if: ${{ steps.deploy-webhook.outputs.status != 'success' }}
        run: aws sns publish --topic-arn $SNS_TOPIC_ARN --message "Deployment to ECR was successful, but webhook execution failed."
          
        
